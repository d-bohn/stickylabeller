% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/facet-wrap-overlay.r
\name{facet_wrap_overlay}
\alias{facet_wrap_overlay}
\title{Pushes out wrapped facet panels underneath the facet labels.}
\usage{
facet_wrap_overlay(facets, nrow = NULL, ncol = NULL, scales = "fixed",
  shrink = TRUE, labeller = "label_value", as.table = TRUE,
  switch = NULL, drop = TRUE, dir = "h", strip.position = "top")
}
\arguments{
\item{facets}{A set of variables or expressions quoted by [vars()]
  and defining faceting groups on the rows or columns dimension.
  The variables can be named (the names are passed to `labeller`).

  For compatibility with the classic interface, can also be a
  formula or character vector. Use either a one sided formula, `~a
  + b`, or a character vector, `c("a", "b")`.}

\item{nrow, ncol}{Number of rows and columns.}

\item{scales}{Should scales be fixed (`"fixed"`, the default),
free (`"free"`), or free in one dimension (`"free_x"`,
`"free_y"`)?}

\item{shrink}{If `TRUE`, will shrink scales to fit output of
statistics, not raw data. If `FALSE`, will be range of raw data
before statistical summary.}

\item{labeller}{A function that takes one data frame of labels and
returns a list or data frame of character vectors. Each input
column corresponds to one factor. Thus there will be more than
one with formulae of the type `~cyl + am`. Each output
column gets displayed as one separate line in the strip
label. This function should inherit from the "labeller" S3 class
for compatibility with [labeller()]. See
[label_value()] for more details and pointers to other
options.}

\item{as.table}{If `TRUE`, the default, the facets are laid out like
a table with highest values at the bottom-right. If `FALSE`, the
facets are laid out like a plot with the highest value at the top-right.}

\item{switch}{By default, the labels are displayed on the top and
right of the plot. If `"x"`, the top labels will be
displayed to the bottom. If `"y"`, the right-hand side
labels will be displayed to the left. Can also be set to
`"both"`.}

\item{drop}{If `TRUE`, the default, all factor levels not used in the
data will automatically be dropped. If `FALSE`, all factor levels
will be shown, regardless of whether or not they appear in the data.}

\item{dir}{Direction: either `"h"` for horizontal, the default, or `"v"`,
for vertical.}

\item{strip.position}{By default, the labels are displayed on the top of
the plot. Using `strip.position` it is possible to place the labels on
either of the four sides by setting \code{strip.position = c("top",
"bottom", "left", "right")}}
}
\description{
\code{facet_wrap_overlay} works just like \code{facet_wrap}, except that
the facet labels are overlaid on the panels. you might prefer this if you're
looking to save space or if you just want to number the panels with
\code{label_glue}.
}
\examples{
library(ggplot2)
library(stickylabeller)
p = ggplot(mtcars) + geom_point(aes(x = mpg, y = gear))
# by default, labels have opaque backgrounds, so this isn't very useful
p + facet_wrap_overlay(~ cyl)

# you'll probably want a blank facet strip background
p + facet_wrap_overlay(~ cyl) +
  theme(strip.background = element_blank())
# you can also do overlay effects
p + facet_wrap_overlay(~ cyl) +
  theme(
    strip.background = element_rect(fill = alpha('black', 0.5)),
    strip.text = element_text(colour = 'white'))

# facet_wrap_overlay works with label_glue
p +
  facet_wrap_overlay(~ cyl,
    labeller = label_glue("({.l})")) +
  theme(strip.background = element_blank())

}
